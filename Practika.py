import numpy as np
# исходная матрица
A = np.array([[2, 1, -1, 8], 
              [-3, -1, 2, -11],
              [-2, 1, 2, -3]])
# свободный вектор
b = np.array([3, -6, -1])
# объединяем матрицу и свободный вектор в одну матрицу
Ab = np.column_stack((A, b))
# получаем размеры матрицы Ab
n, m = Ab.shape
# проходимся по столбцам матрицы Ab
for j in range(n-1):
    # выбираем первый ненулевой элемент в столбце
    for i in range(j, n):
        if Ab[i,j] != 0:
            break
    else:
        # если все элементы в столбце нули, переходим к следующему столбцу
        continue
    # меняем местами строки i и j
    Ab[[j,i], :] = Ab[[i,j], :]
    # делим первую строку на Ab[j,j]
    Ab[j, :] /= Ab[j,j]
    # вычитаем первую строку из остальных строк
    for i in range(n):
        if i == j:
            continue
        Ab[i, :] -= Ab[i,j] * Ab[j, :]  
# выводим результат
x = Ab[:, -1]
print('Решение: x =', x)